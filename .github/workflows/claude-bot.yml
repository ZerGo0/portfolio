name: Claude Code Bot

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]

jobs:
  handle-command:
    runs-on: ubicloud-standard-2
    if: github.event.comment.user.login == 'ZerGo0'

    steps:
      - name: Check for command
        id: check-command
        run: |
          COMMENT_BODY=$(cat << 'EOF'
          ${{ github.event.comment.body }}
          EOF
          )
          if echo "$COMMENT_BODY" | grep -q "@ZerGo0 !"; then
            echo "command-found=true" >> $GITHUB_OUTPUT
          else
            echo "command-found=false" >> $GITHUB_OUTPUT
          fi

      - name: Clone bot repository
        if: steps.check-command.outputs.command-found == 'true'
        uses: actions/checkout@v4
        with:
          repository: ZerGo0/claude-code-github-bot
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - name: Setup Bun
        if: steps.check-command.outputs.command-found == 'true'
        uses: oven-sh/setup-bun@v2

      - name: Compile bot and clean up
        if: steps.check-command.outputs.command-found == 'true'
        run: |
          echo "Compiling bot..."
          bun install
          mkdir -p app
          bun build ./index.ts --compile --outfile ./app/bot
          chmod +x ./app/bot
          echo "Cleaning up claude-code-github-bot..."
          find . -mindepth 1 -maxdepth 1 -not -path './app' -exec rm -rf {} \;
          ls -larth ./
          bun install -g @anthropic-ai/claude-code
          which claude
          echo "Bot compiled successfully"

      - name: Install pnpm
        if: steps.check-command.outputs.command-found == 'true'
        run: |
          npm install -g pnpm

      - name: Execute command
        if: steps.check-command.outputs.command-found == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
          GITHUB_BOT_USERNAME: ${{ github.event.comment.user.login }}
          GIT_USERNAME: ${{ github.event.comment.user.login }}
          GIT_EMAIL: ${{ github.event.comment.user.login }}@users.noreply.github.com
          INPUT_COMMENT_ID: ${{ github.event.comment.id }}
          INPUT_COMMENT_BODY: ${{ github.event.comment.body }}
          INPUT_COMMENT_URL: ${{ github.event.comment.html_url }}
          INPUT_ISSUE_NUMBER: ${{ github.event.issue.number || github.event.pull_request.number }}
          INPUT_REPOSITORY: ${{ github.repository }}
          INPUT_COMMENT_AUTHOR: ${{ github.event.comment.user.login }}
          INPUT_EVENT_NAME: ${{ github.event_name }}
          INPUT_IS_PULL_REQUEST: ${{ github.event.issue.pull_request != null }}
          CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          ANTHROPIC_BASE_URL: ${{ secrets.ANTHROPIC_BASE_URL }}
        run: ./app/bot
